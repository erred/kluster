apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
  name: kube-state-metrics
---
# TODO: replace with default?
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: "runtime/default"
    seccomp.security.alpha.kubernetes.io/defaultProfileName: "runtime/default"
    apparmor.security.beta.kubernetes.io/allowedProfileNames: "runtime/default"
    apparmor.security.beta.kubernetes.io/defaultProfileName: "runtime/default"
  labels:
    app.kubernetes.io/name: kube-state-metrics
  name: kube-state-metrics
spec:
  # # user
  runAsGroup:
    rule: "MustRunAs"
    ranges:
      - min: 1
        max: 65535
  runAsUser:
    rule: "MustRunAsNonRoot"
  fsGroup:
    rule: "MustRunAs"
    ranges:
      - min: 1
        max: 65535
  supplementalGroups:
    rule: "MustRunAs"
    ranges:
      - min: 1
        max: 65535
  # # privilege
  privileged: false
  allowPrivilegeEscalation: false
  defaultAllowPrivilegeEscalation: false
  # # host
  hostIPC: false
  hostNetwork: false
  hostPID: false
  hostPorts: []
  # allowedHostPaths: []
  # allowedProcMountTypes: []
  # allowedUnsafeSysctls: []
  # forbiddenSysctls: []
  seLinux:
    rule: "RunAsAny"
  # # capabilities
  # allowedCapabilities:
  # defaultAddCapabilities:
  requiredDropCapabilities:
    - ALL
  # # filesystem
  readOnlyRootFilesystem: false
  volumes: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
  name: kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: kube-state-metrics
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
  name: prometheus-kube-state-metrics
rules:
  - apiGroups: ["certificates.k8s.io"]
    resources:
      - certificatesigningrequests
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["list", "watch"]

  - apiGroups: ["batch"]
    resources:
      - cronjobs
    verbs: ["list", "watch"]

  - apiGroups: ["extensions", "apps"]
    resources:
      - daemonsets
    verbs: ["list", "watch"]

  - apiGroups: ["extensions", "apps"]
    resources:
      - deployments
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - endpoints
    verbs: ["list", "watch"]

  - apiGroups: ["autoscaling"]
    resources:
      - horizontalpodautoscalers
    verbs: ["list", "watch"]

  - apiGroups: ["extensions", "networking.k8s.io"]
    resources:
      - ingresses
    verbs: ["list", "watch"]

  - apiGroups: ["batch"]
    resources:
      - jobs
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - limitranges
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - namespaces
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - nodes
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - persistentvolumeclaims
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - persistentvolumes
    verbs: ["list", "watch"]

  - apiGroups: ["policy"]
    resources:
      - poddisruptionbudgets
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - pods
    verbs: ["list", "watch"]

  - apiGroups: ["extensions", "apps"]
    resources:
      - replicasets
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - replicationcontrollers
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - resourcequotas
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - secrets
    verbs: ["list", "watch"]

  - apiGroups: [""]
    resources:
      - services
    verbs: ["list", "watch"]

  - apiGroups: ["apps"]
    resources:
      - statefulsets
    verbs: ["list", "watch"]

  - apiGroups: ["storage.k8s.io"]
    resources:
      - storageclasses
    verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
  name: kube-state-metrics
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - kube-state-metrics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
  name: kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: kube-state-metrics
