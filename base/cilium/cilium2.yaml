---
# Source: cilium/templates/cilium-agent-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-client-tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRVjFFQThYUXFLUzN2L3dPZk5WU2NtVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TURVd09USXhNVE15TWxvWApEVEkwTURVd09ESXhNVE15TWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUsyeFhoQ0ptKzc2UFdUQnFQdUltVk8KRk41Y2c2VmNaMVV2SHNDYkpnTUFNUnRtbXEzSVRZdUU0V09oQzFNNE4waDFEdjZLazlucXZYWHJXYmIyT2dtYgpvSlprNWdXbTIrRzdFdTBGZTJEKzZLK1BMYUxYdTdDQUQ2VmVtRXJPQ3QxV3Ewc3NjZmpnZEVUMnUzc3MrNldlCmJPcjliV2hsVjdicnduLytSSnZRZWxMb2hkQTBZcnhMRVZ1aTdmaHlXOFM0UkkxTVdFQU81WjBqUzlKOWFtR0cKMnVPdG5yMElpUGx5c2tNRHErRSt1V0Z3TnRVSVF2M2haNlY5YlFaUzR3Q1J4MWt4aVJLMVRoZnEwa3dzcjlXaAo4Zk1xMVQvUjlmdUhRQ0U0SU14ZFpFTU5VU0xoLzFHb0VIR1J4TXhnczNrU3R6MmE1eGMyTlZJUGdjYTVtbkVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNXSTcxemREVEVMUjRPL1phRgp6Y1k0bU93U056QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXTnY4Q050Z2R0SkJtYWxEUzZDTHZiS2x0U284CkZkV2NjcmRaa2tHdGpMSVAxc2RtdEwwV1FITXhYcENSQzk0T0hyd0xMWkN2ZktQWGN3eUlQR2cvbzU5aWtQQlYKbDhBdTkzaTB0WjlTYUJoSmp5a3NhTUVEUW5na0o5dU1SOTJRaFNjNkpEdnBLdU1Pc1JwZ1lNM0FNdTRJMFNkcgo5SkJJcWRkYnlLLzI3M3ltNXYvRFN4ZUVtb2tXckxmZktHMGhOd2FFUDlkM1cyYXBzczl6N0hVWDJuT2xOU0xhCmlMQlBiREtwYmxVRVNFS3lNMnNiUHVDZm0wOTl0L3liZEVzbGw3WStFZWFZWDJoZjV5UmdMaDI1K0s2dFlqN2cKbVRzTHRnOFNINVBEVHZSMENremNDcloxNEIvVnBMeHdraXVzWU9DS3BmdklnZXZmM2dHRTgrZVlKdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUloRFVZNmlrcm5EZnl6dVZ5S0V2Y293RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRBMU1Ea3lNVEV6TWpOYQpGdzB5TkRBMU1EZ3lNVEV6TWpOYU1DTXhJVEFmQmdOVkJBTU1HQ291YUhWaVlteGxMWEpsYkdGNUxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMeEVwU2hYdkRHNVpKTDEKSVo3WXNhczc4cHNxeXN5RGJtMlBNSHlQTURId1Q1NVp0akVyOHlzN1RyWHdNTWlJeU9NbHg4OVlyM0FKT1pnMwplaUZuU29LQjlwczlGTlA1SmpPQTliSDdubTFWU1kyY1c2VkJtZHlCTEw4V0g3YjU0ZTRHeTBreTZMbFMzUFFRCm96YWJJeFpoNUJ4c2IvbnhRb25PR2ErclFxZGREU0FYOFFFUURncjREY2NDTnpDUkRhOHpLR3plYSs3c2NhMVMKQnduVUUvRFZ3RXZaeCtrNTlveTZVQTNRaFNKQUE1c3JDL2RyZm5ibGI3TzluWUxCcHpHVGN4VVEvYTdBOVMyYgpUUENvQzBuRGhxbytWK2J6aFU5TERFTnJkOU1YeXFRem96bkREMlRMa2tXWjBlcitBNGsrMXpxK0dEMlFxMkE1ClQvTXRCQlVDQXdFQUFhT0JoakNCZ3pBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVsaU85YzNRMAp4QzBlRHYyV2hjM0dPSmpzRWpjd0l3WURWUjBSQkJ3d0dvSVlLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUN1SHFDV1dQVGtVQUJzM1dyUVo2RFd5V0grdEpSSmJ4eWwKN0pXSk9XNi9iTXFzRzk0NVpGbG41aWVsSlNYLzBBRnp0S052RnNOSSszVDhmWkVUUUpuWTFGUTVFYlVTMjZrVgo5bVFhVFlRdzAxVk8zSmZIQytLV2M1dmdwYngvOGpjYTBSUjFWUW9NdGxFZXJ6Ri92WlBhc3lUUmpWSlI1TEtHCnJjNCtkZWlQN29lRWtMY1lvRk90RDdHaGNWdFN4eHJJcXR1SCtsS0pqbStiditQaXNPb0hiclBWcnZabVhmZDgKaTloc08xMCsrdnJjQlFtK210R1R4ZEVZOU1taGtXSmdBL3dPOERtamd2MkVJWDNTWEtzMHB4VFI4U3JiaDJiTgplaVRueHJGWHpvWk4wcmZjMHhZbWZQdGQvcWxjZ1lVVzBuWk90ZThrL3Y4UDBBby92SHVPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdkVTbEtGZThNYmxra3ZVaG50aXhxenZ5bXlyS3pJTnViWTh3Zkk4d01mQlBubG0yCk1TdnpLenRPdGZBd3lJakk0eVhIejFpdmNBazVtRGQ2SVdkS2dvSDJtejBVMC9rbU00RDFzZnVlYlZWSmpaeGIKcFVHWjNJRXN2eFlmdHZuaDdnYkxTVExvdVZMYzlCQ2pOcHNqRm1Ia0hHeHYrZkZDaWM0WnI2dENwMTBOSUJmeApBUkFPQ3ZnTnh3STNNSkVOcnpNb2JONXI3dXh4clZJSENkUVQ4TlhBUzluSDZUbjJqTHBRRGRDRklrQURteXNMCjkydCtkdVZ2czcyZGdzR25NWk56RlJEOXJzRDFMWnRNOEtnTFNjT0dxajVYNXZPRlQwc01RMnQzMHhmS3BET2oKT2NNUFpNdVNSWm5SNnY0RGlUN1hPcjRZUFpDcllEbFA4eTBFRlFJREFRQUJBb0lCQUNwL3JIQ2c3WUNrQXdvUgpmOWRsdnlXU1VMK3FOMEZYWWZRbFlLS2RpQm1kejd0Rk1SV0VnRTRBQTFLYXQ4aHM2RHd1YVI1clBKOGoxZmFBCmYzZE80OGoySVg4Rm1OQUk3QkN3U2NZMXNKdXBwd0xxaXQyUkkzUmRUSWFPTGZhV0RlUTNjR2hEcjdrMTlWNjYKNnIwRzVETEhRa0VRVVc2d2dYNnVJYXBBRkxuR3FiZGdWK2hxZ3V4TkZ6cnhzejhLYWtaY1FDNjk0aUgzTm0yUwpJU0FXREp1RW11Z0FkKzhqNFVFS1ZsaWIrTGRxUk9sY1hranpSdGpPSC9hU0lwNXh5eUM2TjdVaVl1UUVZd0t6CjdYQkpsTUF2REs0UDAvaUpnTTVqcUlNSkFnWC82TTFpUjZXMjBPSWN4UmtkWnhGaGNMYm1TQi83bTRXKy82V2MKS0plVnZya0NnWUVBd2xmTXBYS0ZiUUlWay9vdG4yVHFiWlM3R3djdmVGRzF0d1JXRXJrZWgwbVM2N0J5MWNsZAorV1ppdlBrQ1M5Q2VVZEZjNDQ4VlAvQlpMY21uRmc5Y0xDVUxPVXE2Z0l4b0N0TXdhTjBLbVJvRlhvTG1aUnd6CmtIUXBLYnhxTFVwQmlwUVV0V1ZlcVhzUFJaQ0tWZUQ5OS9FSDhyRTVMN0FPU3hPV3pjSTE2K3NDZ1lFQTkvOTEKa0kyaWFxYUcxeHEzNWl2VmlDem9BSGlVSFdPcnhNbHYvQ3J1UzZwMWE4UmEzbFhJWk1DSDFGOFI5dk04b2JPaQpOZ1ZDampGMmkyazlCeVdGRmZLNXRXT1ZUWk12RnljS3g4TlhDTHp6RHZsWEEyNnpNbjd0VEh5cVZnSFViOHp0ClAyL1ltb0NJQlFqb2xNNG5MNTNFNkthcURWRjlLU2hEdGtnY3ovOENnWUF4UFllM2Y3MjRzZWQvdDhxcGNTdEkKbW4rUnlJOUpnQUozblp5bFg4d1JZUjNkbzdaazNvRjErSEFhQzBsK3Bod0hCUEh4SWthekRaVzYyVFlCaStEQgp1cDBPWmhXOURsWXFML283QjQ1dzNqdndCMkNTeThOdzNVMjBxbTJJamlEdkdMZnFnZ1dyRVdmOEt6UXhzREVKCkNrUUdSTXNGZnlrUDhxV3Arb1FwQXdLQmdCTFlRcUs5WUg0aU1WVGZIdUpLcW1zeW5sNkt5eGFBb0dqUHRjYS8KckdQcmpBaW9YdzlPRFhBNmdSZk9NWnRHV0hFaEtVNVpqL2ttSVEvdTYwaER2WjB4V0pORUFmQm5Jc2pybXBJYgpjZDJrSGdRaFJrOW9kZzE4UDZQMFJTMUw3a3lna2Rha05SMW9idTJUQTdsckFPZEpZZEViK1FnU0RTUzNmbzIzClpSa1pBb0dCQUtRNHo5cHd1TVlzbTFYNCs2alRUa1lpczg2QWNDYTh5b2xxNFRGTU05c0w2RElPL09kV0lKaG8KUzhGbm9jdjRROEFyMHFSNjBua0FRdVYyLzRWaVUvZmpRR0UwM21GQzJsMThKMVBqRndIVzV5aVpmSzArMFhoVQpYSVZSVFU4eWt3VVQ2Z1h3SldNcDhlY3VpQ2hPTUIvemZSYnE5NjFQZXpRZnVabmdhNUpFCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble-server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRVjFFQThYUXFLUzN2L3dPZk5WU2NtVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TURVd09USXhNVE15TWxvWApEVEkwTURVd09ESXhNVE15TWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUsyeFhoQ0ptKzc2UFdUQnFQdUltVk8KRk41Y2c2VmNaMVV2SHNDYkpnTUFNUnRtbXEzSVRZdUU0V09oQzFNNE4waDFEdjZLazlucXZYWHJXYmIyT2dtYgpvSlprNWdXbTIrRzdFdTBGZTJEKzZLK1BMYUxYdTdDQUQ2VmVtRXJPQ3QxV3Ewc3NjZmpnZEVUMnUzc3MrNldlCmJPcjliV2hsVjdicnduLytSSnZRZWxMb2hkQTBZcnhMRVZ1aTdmaHlXOFM0UkkxTVdFQU81WjBqUzlKOWFtR0cKMnVPdG5yMElpUGx5c2tNRHErRSt1V0Z3TnRVSVF2M2haNlY5YlFaUzR3Q1J4MWt4aVJLMVRoZnEwa3dzcjlXaAo4Zk1xMVQvUjlmdUhRQ0U0SU14ZFpFTU5VU0xoLzFHb0VIR1J4TXhnczNrU3R6MmE1eGMyTlZJUGdjYTVtbkVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNXSTcxemREVEVMUjRPL1phRgp6Y1k0bU93U056QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXTnY4Q050Z2R0SkJtYWxEUzZDTHZiS2x0U284CkZkV2NjcmRaa2tHdGpMSVAxc2RtdEwwV1FITXhYcENSQzk0T0hyd0xMWkN2ZktQWGN3eUlQR2cvbzU5aWtQQlYKbDhBdTkzaTB0WjlTYUJoSmp5a3NhTUVEUW5na0o5dU1SOTJRaFNjNkpEdnBLdU1Pc1JwZ1lNM0FNdTRJMFNkcgo5SkJJcWRkYnlLLzI3M3ltNXYvRFN4ZUVtb2tXckxmZktHMGhOd2FFUDlkM1cyYXBzczl6N0hVWDJuT2xOU0xhCmlMQlBiREtwYmxVRVNFS3lNMnNiUHVDZm0wOTl0L3liZEVzbGw3WStFZWFZWDJoZjV5UmdMaDI1K0s2dFlqN2cKbVRzTHRnOFNINVBEVHZSMENremNDcloxNEIvVnBMeHdraXVzWU9DS3BmdklnZXZmM2dHRTgrZVlKdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYRENDQWtTZ0F3SUJBZ0lRUXBQTU84clVnZVVOY0xSbGx3KzRMakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TURVd09USXhNVE15TWxvWApEVEkwTURVd09ESXhNVE15TWxvd0tERW1NQ1FHQTFVRUF3d2RLaTV0WldSbFlTNW9kV0ppYkdVdFozSndZeTVqCmFXeHBkVzB1YVc4d2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN0ODRzMkIxd3UKZE0yNUVlQkxZZklZcFVnLytvMFBTaEhJUXR1UE5nZjFiS00yWmM5TlBpTGRab0hsaWh2L095Y0lCQ0oxRFN6UQp0VzBVUHBRZ1pwNnRac0ZaWXRlZytJUXlHNFJjaFJaWVNHU0p3WDBrSEhNdUtsV2Jvd0t0UDdaa0xielhCbU9XCjlsSGJiM2EyQU51QlUyMm1XUnluUGpwV0ZKSTNqNlZjczF5MTIrdWNRTU9Ka3RTeElXUzdkVUJ5UXZhcy96S2wKa3RJNS9nY21Relh5UUJjMDA0TU1JcEFMV2FBT0FSLzgxVG1tUlRyTGt3eTBJRE1ZdTFOTVZITytHVnVNWFhjWQpzVFB5ODM1S2E2c3JlMFYzT21tVWk2Q0MvNTloT2FmeHZDazBsMW9vWmg5WkdZN0JhL3NrVXYybkRsK0FBL2cvCmF4VVMyZUVFK1JUTEFnTUJBQUdqZ1lzd2dZZ3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUcKQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkpZagp2WE4wTk1RdEhnNzlsb1hOeGppWTdCSTNNQ2dHQTFVZEVRUWhNQitDSFNvdWJXVmtaV0V1YUhWaVlteGxMV2R5CmNHTXVZMmxzYVhWdExtbHZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJYNHZXcGpoQUZFOTdqTGpZQjhBZUoKblRpS3NQVWtGbjF1TTBqMkl1U0hJV2ZJWHBhRjEwVnRGdmRlZUJNeXlJNWMyeHBUampnTmtzbWdFVVNPQVBReQpLNjEycTBneUZZZlZEeHgzUlJxellmQ3ppcm0zM0U4a0VaODlvdkVndzJqVHJwazJmRGF5QXdBK0hGNmptakFHCjFGdTVhdUs3NXhXQUE5d1NueFpUemNyYldDdTNWeXRXYmVWeXh5ZnpsQ1lXelF4K1N2L0NLRTY4SkU0WDFnQ0UKSHNldERhZ0VDdmZPTmtHUU51OGtLa0pSRENSSko2WFk0MS9Lc243NXpkWWUydDNvYmJ0WWhCRE9lUnBvUFJ3cQpKMEFWdTh5a2xlUVlKS0szT2F6NmFNcXZzKzdkeGxvUnJTaDAyanNCbzZDM2phdjEzS3poMk90OWRqRjB5eklPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcmZPTE5nZGNMblROdVJIZ1MySHlHS1ZJUC9xTkQwb1J5RUxianpZSDlXeWpObVhQClRUNGkzV2FCNVlvYi96c25DQVFpZFEwczBMVnRGRDZVSUdhZXJXYkJXV0xYb1BpRU1odUVYSVVXV0Voa2ljRjkKSkJ4ekxpcFZtNk1DclQrMlpDMjgxd1pqbHZaUjIyOTJ0Z0RiZ1ZOdHBsa2NwejQ2VmhTU040K2xYTE5jdGR2cgpuRUREaVpMVXNTRmt1M1ZBY2tMMnJQOHlwWkxTT2Y0SEprTTE4a0FYTk5PRERDS1FDMW1nRGdFZi9OVTVwa1U2Cnk1TU10Q0F6R0x0VFRGUnp2aGxiakYxM0dMRXo4dk4rU211ckszdEZkenBwbEl1Z2d2K2ZZVG1uOGJ3cE5KZGEKS0dZZldSbU93V3Y3SkZMOXB3NWZnQVA0UDJzVkV0bmhCUGtVeXdJREFRQUJBb0lCQVFDU3F4aWowNHpiOXN4RwowVlhHK2F6Qkx3cytOcW1kVEp5MXQvbWNSTGh0TE01bzNXcnUvQWMxbW1ySCthMGxoT0NpRjZwZCsxL2dFamtJCnFzTUdsc0FRQU9YaDBqOXhrRmtXVHJGSnVVVmY1cG91dEtBcFJIdXhYeXlUYjl5ZjYycUVDVFNDTVBiam9JamcKZHBrbldJMjcrM1ltbmxoVWcxbDRueHV5RVVJaWFBMHFYcGVIOHhLNmZiYjYwckFGdGloOGRZeFZCbVFZT21EcwpQOTNqYzVkWkRRcDdTc3Q3MzFTNW1STko1eDY4OUc2S0NmR29HME00dHpTakNuWWRWOGRtZDBSbk5nR2FjYXZwCmdQVU9QWnBLcTdSa0YvQ0VqbXIrenM3TXBqay9Kc2NabnN6VGF3Z2xMbFY4TmJrVks4M3RHRWx2R0Q5V3JjTHgKdnRkeTBDOGhBb0dCQU5tZU9pdE16cGt2SmE1d0crcDg5QzlPalRiYk16a0VVbGxISVZzaVM3Y2RUbFFaSGdHYQpDY2lJeUwrTk95K1g2Z0QyajlUYWMwaTRYcnNUcW0vSVovcy9iZEZkaFd0UkFxYjZSMlprK0MxZzJBbmlRL1pqCkYwelltcGJVLzdsUDAzNmNuUTBqTGtkNXRpcE1ISjFzZ0ZJYjBlRTErYlFuS0oxNitYTnpBeHVwQW9HQkFNeWgKc3plbUsxOTNQK3JHZzBoRGRkK0hTWmprVjl6RHZIOHVlUyt1NXNiTGdwckYvdnpjV2VuMjd4RTFPQ21ueXU3ZApiRVo1d0RHWWkvUWMrYmdrMG1KdXBZODJSZWVmbWlNSU1vajFqVDlTU1ZMTmIyYVAxR25YZ29sMmd4OHY3cWo2Cnh3OVVMak1qVnhOSGtiMHlPaDJnbkhJWk9KTFd5dnE1QXZTWmlGVlRBb0dBRWpNcWVENlhOTFo5dDBZRy82aHQKbjVzNU1qSkk2V2JVSUVWVG85U05jb1lQNi9haHpNNStMUGhMbWNHTkJxRDA0Qm0rMDdWbFdOcWFpWmpPYzBUVwpkV3ZMbW12dzRaWEgzQUVvZ1liR1ByMVB0QnZwUlN6cVlQSG9rOTdDZUZRVnd3d0VFbm96djZTTk9LSmU3a2VKCnY5UTF6RmtBUmpIVU1yOTdKMDJpSCtrQ2dZQWxWekJ6N0MrbitRUEIzTDJpRnlWUVI4aW5US3UzemtQOFZVZXAKNnRtVDF4a2JFeHhIbWhJU1BvdzdjS0d5QUR0b3dTRDc3MFdpQnpzcXJZcm9EbGdSdkMwYjZBUnprczAyclUxRApic042bFpKcHVMRW1Yd0tjMmNXcFBlWUpiOTYyR1NUdjZDV1NFVlhYWDh6NVlFdjRraEZhUkwzdEZhTHVnNHBGCmhpcTVud0tCZ1FDa3R1VldGM21SdGxHdmNPaFhyME1nL3hrUDR1ZkdxQUd2ZlA3MmhXMFg1VXpVd01SZm9UR3oKRnpPR1l6UGhPMW5tUW9ZMWtpUkYzSEIzcC84Q1UwZmRLYkJjL3IzTTZtRlpjUStsbEpneUFIb0NTRWMzWDhXUAp5dmNsT25tc1hJa1hNa0NkSjUzcXdvTGd0cVhFMXpDS2RPb1pKMkFvMnUrNytoUVRZanRmWkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in a kvstore, etcd or consul, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "true"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: medea
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "1"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: disabled
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  # wait-bpf-mount makes init container wait until bpf filesystem is mounted
  wait-bpf-mount: "false"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "true"
  enable-local-redirect-policy: "false"
  native-routing-cidr: 10.240.0.0/15
  kube-proxy-replacement:  "probe"
  kube-proxy-replacement-healthz-bind-address: ""
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.241.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  cluster-pool-ipv6-cidr: "fd00::/104"
  cluster-pool-ipv6-mask-size: "120"
  disable-cnp-status-updates: "true"
---
# Source: cilium/templates/hubble-ca-configmap.yaml
# NOTE: the hubble-ca-cert ConfigMap is deprecated and will be removed in v1.11
# The Hubble CA certificate can be found in both the hubble-server-certs and
# hubble-relay-client-certs Secrets under the ca.crt key.
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ca-cert
  namespace: kube-system
data:
  ca.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIDJzCCAg+gAwIBAgIQV1EA8XQqKS3v/wOfNVScmTANBgkqhkiG9w0BAQsFADAe
    MRwwGgYDVQQDExNodWJibGUtY2EuY2lsaXVtLmlvMB4XDTIxMDUwOTIxMTMyMloX
    DTI0MDUwODIxMTMyMlowHjEcMBoGA1UEAxMTaHViYmxlLWNhLmNpbGl1bS5pbzCC
    ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMK2xXhCJm+76PWTBqPuImVO
    FN5cg6VcZ1UvHsCbJgMAMRtmmq3ITYuE4WOhC1M4N0h1Dv6Kk9nqvXXrWbb2Ogmb
    oJZk5gWm2+G7Eu0Fe2D+6K+PLaLXu7CAD6VemErOCt1Wq0sscfjgdET2u3ss+6We
    bOr9bWhlV7brwn/+RJvQelLohdA0YrxLEVui7fhyW8S4RI1MWEAO5Z0jS9J9amGG
    2uOtnr0IiPlyskMDq+E+uWFwNtUIQv3hZ6V9bQZS4wCRx1kxiRK1Thfq0kwsr9Wh
    8fMq1T/R9fuHQCE4IMxdZEMNUSLh/1GoEHGRxMxgs3kStz2a5xc2NVIPgca5mnEC
    AwEAAaNhMF8wDgYDVR0PAQH/BAQDAgKkMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggr
    BgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSWI71zdDTELR4O/ZaF
    zcY4mOwSNzANBgkqhkiG9w0BAQsFAAOCAQEAWNv8CNtgdtJBmalDS6CLvbKltSo8
    FdWccrdZkkGtjLIP1sdmtL0WQHMxXpCRC94OHrwLLZCvfKPXcwyIPGg/o59ikPBV
    l8Au93i0tZ9SaBhJjyksaMEDQngkJ9uMR92QhSc6JDvpKuMOsRpgYM3AMu4I0Sdr
    9JBIqddbyK/273ym5v/DSxeEmokWrLffKG0hNwaEP9d3W2apss9z7HUX2nOlNSLa
    iLBPbDKpblUESEKyM2sbPuCfm099t/ybdEsll7Y+EeaYX2hf5yRgLh25+K6tYj7g
    mTsLtg8SH5PDTvR0CkzcCrZ14B/VpLxwkiusYOCKpfvIgevf3gGE8+eYJw==
    -----END CERTIFICATE-----
---
# Source: cilium/templates/hubble-relay-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-relay-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-relay
rules:
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/hubble-ui-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-relay
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-relay
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: "hubble-relay"
---
# Source: cilium/templates/hubble-ui-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: "hubble-ui"
---
# Source: cilium/templates/hubble-relay-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  labels:
    k8s-app: hubble-ui
  namespace: kube-system
spec:
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
  type: ClusterIP
---
# Source: cilium/templates/cilium-agent-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        startupProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 24
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "65.21.73.144"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: "quay.io/cilium/cilium:v1.10.0-rc1@sha256:bdec5db5b9651c208a326f8d3b1d6a1caf5d943989ea2fdb68b24802dd17b134"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        name: cilium-agent
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
          # Needed to be able to load kernel modules
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: CILIUM_WAIT_BPF_MOUNT
          valueFrom:
            configMapKeyRef:
              key: wait-bpf-mount
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "65.21.73.144"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: "quay.io/cilium/cilium:v1.10.0-rc1@sha256:bdec5db5b9651c208a326f8d3b1d6a1caf5d943989ea2fdb68b24802dd17b134"
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
          mountPropagation: HostToContainer
        - mountPath: /var/run/cilium
          name: cilium-run
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
        # To keep state between restarts / upgrades for bpf maps
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      # To install cilium cni plugin in the host
      - hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
        # To install cilium cni configuration in the host
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
        # To be able to load kernel modules
      - hostPath:
          path: /lib/modules
        name: lib-modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          defaultMode: 420
          optional: true
          secretName: cilium-clustermesh
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          sources:
          - secret:
              name: hubble-server-certs
              items:
                - key: ca.crt
                  path: client-ca.crt
                - key: tls.crt
                  path: server.crt
                - key: tls.key
                  path: server.key
              optional: true
---
# Source: cilium/templates/cilium-operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "65.21.73.144"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: "quay.io/cilium/operator-generic:v1.10.0-rc1@sha256:3b46c6fc9dc085d395136ca9cf8af1d0f653184c797e0ad7038e103abfbffacd"
        imagePullPolicy: IfNotPresent
        name: cilium-operator
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
      - operator: Exists
      volumes:
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
# Source: cilium/templates/hubble-relay-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  labels:
    k8s-app: hubble-relay
  namespace: kube-system
spec:

  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.10.0-rc1@sha256:9e1120dd272bf5ebce5f7b2002ac7ae9a2854d9b7a799e0548312432c9c28b8d"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - mountPath: /var/run/cilium
            name: hubble-sock-dir
            readOnly: true
          - mountPath: /etc/hubble-relay
            name: config
            readOnly: true
          - mountPath: /var/lib/hubble-relay/tls
            name: tls
            readOnly: true
      restartPolicy: Always
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      terminationGracePeriodSeconds: 0
      volumes:
      - configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
        name: config
      - hostPath:
          path: /var/run/cilium
          type: Directory
        name: hubble-sock-dir
      - projected:
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
        name: tls
---
# Source: cilium/templates/hubble-ui-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
        - name: frontend
          image: "quay.io/cilium/hubble-ui:v0.7.7@sha256:f20b6b3074a431ecd2730cf19afad2562664cf98baecf32b4cbe2a09f04ad8fa"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          resources:
            {}
        - name: backend
          image: "quay.io/cilium/hubble-ui-backend:v0.7.7@sha256:11d06121c86549c0c8684571ffed4ff3d4c4417f551728f4fad6d05525c47e9d"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
          ports:
            - containerPort: 8090
              name: grpc
          resources:
            {}
        - name: proxy
          image: "docker.io/envoyproxy/envoy:v1.18.2@sha256:e8b37c1d75787dd1e712ff389b0d37337dc8a174a63bed9c34ba73359dc67da7"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: http
          resources:
            {}
          command: ["envoy"]
          args:
            [
              "-c",
              "/etc/envoy.yaml",
              "-l",
              "info"
            ]
          volumeMounts:
            - name: hubble-ui-envoy-yaml
              mountPath: /etc/envoy.yaml
              subPath: envoy.yaml
      volumes:
        - name: hubble-ui-envoy-yaml
          configMap:
            name: hubble-ui-envoy
