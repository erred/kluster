---
# Source: cilium/templates/cilium-agent-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-client-tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQUk4NUljb0FxektKVVRjN1hkMWExWm93RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRBMU1ETXlNREU0TURkYQpGdzB5TkRBMU1ESXlNREU0TURkYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURFUXVrdUVYQURscUluUXhKeGxvd3AKK2tLRExMM0JsZnEyTnBzOFMyRTcxbVYxWDZ2YVdnOU5CL1cyWWRnNEVxdlU1VG5UZDZ1MjRZQTljYU9paUdENApGYU1rSDVxczZkMXhoYmdlOVJ5ZlBCcXZpdUlGRUxNUVhiMUpxQzI1Yy9JUzJXYWQyQ0NGeVNQYnYyT2FXZ2hpCm0vMXcrTVFIL1lIRkdMU0lEdCs1ZWNnZlprV2pwQUJnNjBKMUliMHVtS0F3RlRBUlVOUWZjZUZGYndKMTJEdTAKUVE3RUg1RGtKbHJ6SjVJU3V0bzdtRjh3NzNxSjcxMkRvL25Za29QOHQ1RGIyK05VZzBRTVpkUm9ocG5xNWt5WApiOFFkS2w5TkF0Zzh4aE9UMzRLUnFhcnFDcW1SeWZuRnVlR0VTc2pueTEzWllVR0lvYlZiNTh5cjZaMEdMR0x4CkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVcjk0Rk9WMm5VN0hRMzVjNQo2OU1nQUZUS0xNQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQzIxbFpFbnJKQnplenJvcUhWWE90cXNkOXJRCkdFeGg4OUthakhaR3d5RWZNVTJaNm5HZGFtbEJhaWVvV01Nbi9MZjduNldoNHoxc0poQ1p1cmdBUU45WU1GTTIKSGpYS01adEFUV0FVTHhMZC8xLzJKSXdycS8xMmthWklqTGQ4eDh0bS9vRXFjQTBrZ2JOUW00V1FRLzc5Vy9qdgp4b1hxRTVoVWhjYUs4a3k5ZkhtNm8yUFRYaytoTFVXL3pWalFzcVRMM3ZoaHJLNXpDajBYQTZvNDJhT0lQSitnClN6bEJhTUo5YVBqK3hidTVTMmU2VnBKMklLbm1BRk96OWxLY0lndmFTYlMzUXE5OUNqREY1aVdnWnAyR2lWMXkKaE56ZVl4YTNmWnluSU5sRFhhdGREd2xrTUhkRXB6OUQzdGpCNFFuY3JSc3p6OFJ0WHNSMWJ2Z0dZMGs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRTUpZNnhFLzNKUzhyVCtDVzgxMjFIakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl4TURVd016SXdNVGd3TjFvWApEVEkwTURVd01qSXdNVGd3TjFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVOV1B1L04zcktkMVl0Wk4KNjA2MDNQZEc2TStKSHlQb2tSK3hDR21tUlFOeU4yL0xua3l0VFc5NGNrRUdUTlRMbUFXd2M1QTlraHhIWFk2cApzeUpPKzllbnBXcC9IdlFzM3dwYlBYbDdxOEo5THBIak5nbkNHRFVPUEhyQ0l2SE9qOS9QSmxBWnFXRUhIYkpwCkdZd3FNVlFJZnovemNkUU5MRkozZ2orRmN1ek02RFY2cDhtdnQ2VkVoZ3h3NElSSHZBN3M2bnlHMGRoLzl3WGcKSUlzdmJSZGVZMGNqZzNkNUEzMnRKVkdpQ0lmcEk0eVdJQ296elBuT0puMW1PdjR3aTRXTWRNRzFUT01WN2ZlWApZNnMyV3BPK2VsdHdocTE0OC9lTW1JYm54Rkd2OUJQWUV0QzRiZEFLcjZFandlckx2QURmeTRDNlNGYXcxUUJ6CllXd2REd0lEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU3YzZ1U1WGFkVApzZERmbHpucjB5QUFWTW9zd0RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRWVOY3gyZi96RFc0ME1RR0J6NzlVVVUwdG5ocjRSUnVSWDIKb3B0ODZoN2N4NVhxdE1BS2pPY3EzM3dvOElRbFVOclcwcjlNcWh1cGhBd09mQ2dqS0crOWhHK1prN0dJRzB1YQo4a3dpWmFTMnZmcmZRUEd3d3dNOUlDdUkrWEhta0Z6Sk9kVHpmd2grUWx3YmxHSFI1OS9USk1WVmdLWXZpbFpNCktSQVYwdU1QMng4UWhuczhQSnlSOU8rRVg3VVpCcEtBYVFsOTNuQThaMnByLzF1NWRkMXBjK3BJa3VVRk1FZEkKbUZWMUloLytKN3ZWbUM5UE8zeU4vYStMQ25YUEdMMVU3WWNjaEI0dkg2NTVQTXF6UjJtZ214N0xGL1VIb1docgpqbzdCdllxcWhyMjRRQXVzcGFrWWJxQXVWb0lBWUN0UkdOWDkyZTdEd2szclBIWTdCV2s9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdU5XUHUvTjNyS2QxWXRaTjYwNjAzUGRHNk0rSkh5UG9rUit4Q0dtbVJRTnlOMi9MCm5reXRUVzk0Y2tFR1ROVExtQVd3YzVBOWtoeEhYWTZwc3lKTys5ZW5wV3AvSHZRczN3cGJQWGw3cThKOUxwSGoKTmduQ0dEVU9QSHJDSXZIT2o5L1BKbEFacVdFSEhiSnBHWXdxTVZRSWZ6L3pjZFFOTEZKM2dqK0ZjdXpNNkRWNgpwOG12dDZWRWhneHc0SVJIdkE3czZueUcwZGgvOXdYZ0lJc3ZiUmRlWTBjamczZDVBMzJ0SlZHaUNJZnBJNHlXCklDb3p6UG5PSm4xbU92NHdpNFdNZE1HMVRPTVY3ZmVYWTZzMldwTytlbHR3aHExNDgvZU1tSWJueEZHdjlCUFkKRXRDNGJkQUtyNkVqd2VyTHZBRGZ5NEM2U0ZhdzFRQnpZV3dkRHdJREFRQUJBb0lCQVFDVWpGYmphRTRUUGRheQo0NmRsNlRDa3NqdVVHaytLN25JWVNJOGdRc0Mxa0lwNEVXcGxSQnk0TWxGc0NlU0ZWVFIzYm9NY3JaMCtVMm5yCndCK1U3NHJwRHE0VzNKdGtCandWMlozd3J6VDhtdWUreU5NQitCKzlFczdwUG9QT1QrYUNiUTV3TFVvaWZlK1oKSjIwZWNpN3F6QzIwRDNLWlZpSnNMNjhLeUFCNWxvZUI3NGNoaG9lZ0tKdk8vaHJOZDRFeGFCRkhmQUwzcUdpbQo4dktJVFQzRmlOcTIrRlFmSlJjMVFROXFtaUFTWXdVcHRNYUZNSTN4NURVVkJWOXVpTjNEK1B6U3BWcHljOE8yCmNrVnpIdWs4bGxod3FoR3FCMzVONFFERmhycWJHN1FFUDFUaFJFSGE4TmJKN0VzeGg0RTUyS3pFL0MxQS8zV2kKblIwejhqblJBb0dCQU51ZkVQMlpyTTBuZERyNW55ZnNEUUt5TVJ2bFZTQlhVU3JtOHREVHNtdU81NWNoKzRVWgpJaGxSeW9CNUpmSFJEOUdtRlVHczJud3FUNWx4bGFVVnEyMGw3czZyWS9WSEg0U3FIczk4NmFyRW5zSWZPRE1HCkR1Vk5naVg1U3BwajhWbUJIL0ZxU1czd3lCTlViR2o1Rmg3bXp1S0lldnkwbUl4TWFPanErbkJKQW9HQkFOZHoKWFVNVW02QzhiZTJVUUtPQ3FMbTUrdmN3MHFTbUt3RGRjMjI3SENZV1Q1OUl5UFVTd2kwVTM4M09DUFp4QjZlRgorTmovV2tKQUxieXdUaUJEYzRMTE1PUzlRaGxiVzlPK2RzcXFQMmNNUzA5N2tZQXlIN1hFcFJGdjBNR2xrNTBuCkpoemVLKzRoZ2RZUm5xYWY1TGNyU0U0WjJJRUdvaUVmQ1MvSzJOS1hBb0dBTWdaNWlFcUk0ZklxdDRSRWpJTm8KTTBVRGlxY2lUTXVXNFg3WnNGZUlQSmZBaU54a3ZseUxOOWs1bHlvQlNxT2tSc3pkNnFmRTNLT0duaDBSU1JrMgpneFl3MzBLSzhrUFJHaGJtRGIwV1BKK3N5ZXJ5a2l5L0Y5d2YyU1ovcDhzOEhuY2JINUptUjNTaEhrWU1xNXlSClBWaTFwMFFQUDZDalh0SEkwOFV5Wm9FQ2dZQnFNc05WdldLNDZDaUhZdnc1bkwzdVRtNFdTa3FLUGg0VVh4UDIKa3JSZFVjSU5rYUw4cWpKc1prMnE5RlFXcGNCUUl3bDJiT2Znb0NIclVEd3lTdzAwKzFNdWJOdVlCQ0JQVHlMZQo0dXc5cnlHd0hBaXNXQWlwWURTOVU1Qmk0MnJQbSt4OWJrWFpLMHNFYWNyNTl2YVdFdytnNzd4NFhQeXR0czZnCmNDeFFJUUtCZ0V3STdXNVFJZWdKRFR6Q2dNd0ZENHFscVc3N1V4OUEyTHZXR29HYWhmYXM3emF0d3VWMUNFRmIKMnQ3WFc5djRIV3A5Skc3Z29HK0JnWjkwN1lEN1c1WmUvNE1kUVl6anp1TWtiU0QxclJTZWk1NVN3Njd4dlhITAowRW1zNktZbHU1MEdQSEFScDRLNHpGN0Q5RkdVWUxrc3dpUm9LZ0F1STZuMnE3aW1GVGoyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble-server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQUk4NUljb0FxektKVVRjN1hkMWExWm93RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRBMU1ETXlNREU0TURkYQpGdzB5TkRBMU1ESXlNREU0TURkYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURFUXVrdUVYQURscUluUXhKeGxvd3AKK2tLRExMM0JsZnEyTnBzOFMyRTcxbVYxWDZ2YVdnOU5CL1cyWWRnNEVxdlU1VG5UZDZ1MjRZQTljYU9paUdENApGYU1rSDVxczZkMXhoYmdlOVJ5ZlBCcXZpdUlGRUxNUVhiMUpxQzI1Yy9JUzJXYWQyQ0NGeVNQYnYyT2FXZ2hpCm0vMXcrTVFIL1lIRkdMU0lEdCs1ZWNnZlprV2pwQUJnNjBKMUliMHVtS0F3RlRBUlVOUWZjZUZGYndKMTJEdTAKUVE3RUg1RGtKbHJ6SjVJU3V0bzdtRjh3NzNxSjcxMkRvL25Za29QOHQ1RGIyK05VZzBRTVpkUm9ocG5xNWt5WApiOFFkS2w5TkF0Zzh4aE9UMzRLUnFhcnFDcW1SeWZuRnVlR0VTc2pueTEzWllVR0lvYlZiNTh5cjZaMEdMR0x4CkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVcjk0Rk9WMm5VN0hRMzVjNQo2OU1nQUZUS0xNQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQzIxbFpFbnJKQnplenJvcUhWWE90cXNkOXJRCkdFeGg4OUthakhaR3d5RWZNVTJaNm5HZGFtbEJhaWVvV01Nbi9MZjduNldoNHoxc0poQ1p1cmdBUU45WU1GTTIKSGpYS01adEFUV0FVTHhMZC8xLzJKSXdycS8xMmthWklqTGQ4eDh0bS9vRXFjQTBrZ2JOUW00V1FRLzc5Vy9qdgp4b1hxRTVoVWhjYUs4a3k5ZkhtNm8yUFRYaytoTFVXL3pWalFzcVRMM3ZoaHJLNXpDajBYQTZvNDJhT0lQSitnClN6bEJhTUo5YVBqK3hidTVTMmU2VnBKMklLbm1BRk96OWxLY0lndmFTYlMzUXE5OUNqREY1aVdnWnAyR2lWMXkKaE56ZVl4YTNmWnluSU5sRFhhdGREd2xrTUhkRXB6OUQzdGpCNFFuY3JSc3p6OFJ0WHNSMWJ2Z0dZMGs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lSQUxMMDFQcWxPT3A5NW8ycDV4a0xhNTR3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRBMU1ETXlNREU0TURkYQpGdzB5TkRBMU1ESXlNREU0TURkYU1DZ3hKakFrQmdOVkJBTU1IU291YldWa1pXRXVhSFZpWW14bExXZHljR011ClkybHNhWFZ0TG1sdk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMXE1SzRGbVUKZ1c5VFNKWmVJTlJlT2MyV1VTajhLQm96dTlLNi9XU3dOV1U5SGY5WTZLMGxyM210MHZ3QVJvNFlKd3k0bTlXMgpXbVhBcU5hQ2FWa0dsUk1ic2dlWUluVmMvNStkZTVnMklTQWZBMEQ2a1VFQ2xIYVZreUE3dVdOWndhNGpJRmJ0ClA1cExLdWFBdVlrZ0pwMG5IR2Zuam9vNGFvdkZ5UTZqc2tQMnI4dXlFM2wrdy9ZWit4bC9kaS8wSlpQSUptSzAKOGZDRHBHU2crb3EvemdlUENOUVY1bGZJMm55NGV6LzU2anNtbTczQURHOFQ1Ym8xSW1uck5iT2R3Mm5sODBNagpJQ2x4SktUMFUwRFV2VTdjQ3V4NzZGOGJUMWNBREN0SmtDeEo2RUdkYzFPdTRBYUptR2hyWUpxdVBjejIxd1hXCmVwRjlEeStVa1JxUDh3SURBUUFCbzRHTE1JR0lNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVUKQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTdgozZ1U1WGFkVHNkRGZsem5yMHlBQVZNb3N3REFvQmdOVkhSRUVJVEFmZ2gwcUxtMWxaR1ZoTG1oMVltSnNaUzFuCmNuQmpMbU5wYkdsMWJTNXBiekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBU3ZHczRSQW04ait2eGlISzVjaEIKUzFISHZYcnc3cmk1UUUrTlVQeXNsNFcrb3RtelRVT1QwZExYeG5RY09scDgzM21mSlkwcEhZQi85eDNGdndVQgpEQ2F6V1prMCtJbWlYUGd5VUNqc3FNUDUxaUFscVRzZnNYNjBGWWdtMHhkNW1WTWpqNHV1ZTNwVXcrZU9sY25TCml5cmFCcHlLZWU4SHN4MkYrLzFWdVl0SFU4OEptUWlpVGhINmpXUDFzYjl4NENCWEVLZXEwOEtUREFxOHM0WjIKVFNXWHJiSjFidTBLZUp2ODlHbXB2dG5nVkVhaXF6eTFUSHArV0FKbHE5ZzJibGZjaE1INU9RaVU2dW93U2g2bQpQR3JwT2N2blMzMEM2S0t6aHdqZlZ6WjhGTFR3eTh3WnA3ek1zQ2I1NmpSSERDdUJPSElGeGlDNmRlc0RYMHkvCjBBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMXE1SzRGbVVnVzlUU0paZUlOUmVPYzJXVVNqOEtCb3p1OUs2L1dTd05XVTlIZjlZCjZLMGxyM210MHZ3QVJvNFlKd3k0bTlXMldtWEFxTmFDYVZrR2xSTWJzZ2VZSW5WYy81K2RlNWcySVNBZkEwRDYKa1VFQ2xIYVZreUE3dVdOWndhNGpJRmJ0UDVwTEt1YUF1WWtnSnAwbkhHZm5qb280YW92RnlRNmpza1Aycjh1eQpFM2wrdy9ZWit4bC9kaS8wSlpQSUptSzA4ZkNEcEdTZytvcS96Z2VQQ05RVjVsZkkybnk0ZXovNTZqc21tNzNBCkRHOFQ1Ym8xSW1uck5iT2R3Mm5sODBNaklDbHhKS1QwVTBEVXZVN2NDdXg3NkY4YlQxY0FEQ3RKa0N4SjZFR2QKYzFPdTRBYUptR2hyWUpxdVBjejIxd1hXZXBGOUR5K1VrUnFQOHdJREFRQUJBb0lCQUc4T2hSK2dWOG5Kdkd6TgpsTzRvem9IYWo4dDJoMU43a28yMGl4VXd0Rk03Qnkzd2ZaOElpM2xHV2h6T1Rwb3hRZDlabmxySGFPbEV3RERYCm4yaytLOENNdlFRUkY2dWp5VE5YOEJFVEFkV0xGMkFJaWxjQUtZU0NBQWkzWVE0YmprQTZoR05qZEtJMWdITTIKQVJ0NkM0N09ONEJqWkErQ0E0Tml3VE9zaGhSZVR3cC9zSzJ5VThmSkF1cHUxMzl5clRhcFB6SmNnT2p4d2pTSwpmbitUeXExaHBRK1RDK3lQTk9hakdWSmpRZ09icmpqdjQ2dzZUUGplWTJuU1FPdkVSTkFiYVg2dzE3Z05lUllICjIwdEEzM0QyTkZjTjFFL0tZWVNpcVBkeGtVZkNXYjkvZVRqUVlVclFzaUx1MFJjeVIyTVZueTZkR0hLd3dNRWwKY2lsZFVYa0NnWUVBMlRtODR0aG50V3ozUmdFN1FOK2Yrc1lBNVd3S3J4bU5jeEJXcXBxdjcyc3loUEFrK3YybwpLYTdTOEdzUzVnVXhlZkJpSjV6cllrVklUeTFuVEZRRFRheGwzeG8wSUhWaGNMM0ZWNzJydU1Wdlo2M0gzUEpPCjNrY29nRFVObllnWVVxV3lUdW9Tek1lUXdLTDRNQm1MdnVRYk5QM3FwSEkycFB6bUJ5ZW0rQThDZ1lFQS9RQkYKeFlSdFRPb1RFUnplWDVWbjRaQUlSaHZsbWVhbk9lRTZRWWs5Uk51MGx2TkVxY0RZb0tUb3JIZmtRTmJHdm40VQoySkNpRTg5K0FCVHdMUFBncGxHbm5SYWtSRng0QjBNSmZvMm5GeU1MV24vM2ZtRzJUOCtobGlNeC9tTXBEelNKCk54eGs5QXJ0eXV5L1kxWFZNRHVrT1ZGSER2ZTJCcWR1cDh2ZjVkMENnWUJWeVlHWkxORzRTckpWQ1VOM1dWbDYKMWh1Z2YweXczaXlJbHBsRGd4ZWNPLytWbEtsbUhpcjlXemVmRHdwRm9TTnEvczRreXNvQzQwMnRSMGNXVTgrQwpLMldIK0hkQm9sbTdCcGNiRWFMeHM3ZE5nTW4vcmdvTHFwcUtGMm1ySHdaTURYZ2Z4ajFxZGgzcWxmSGlQUlI5CmJPUjV4eFdWb0MySWR2LzVMMlczYlFLQmdRRGpaUk5RN0MyeEs5SG5WNk1uRmdwQVdreVZkdzF1dmprZmRLZi8KcjNJNktaNnU3Z2VRNjV2SkIyOTVWR2o3UGc5enQ2N1UxMnBWay9FVDhiM05LWVdJOTJ0SGJjcEhCelY2a1c0LwpLT0k5a1ducTlZbGxOajIramtnVndaeDFvSHFQQ0JFc1Q0RU5ONlZ5OWtjdTZUNnNFMjhQZFZZQXhmUDlGeEFHCkVPQTBvUUtCZ1FDTWJOU3BGYVFwYTk5SDV0Kyt1bjdHZ2VaZHEzeHRUamRmb1FGSjRlR2hweWpRRFlxeHdVRXQKMk53dlFILytPbkxTOURrbC9CUGx5ZTRYMDN1Qm1YTzVlSnhJT2owMXIvUjBlWmx0VUJUWEdOTGZaaU9ObWcveApwNzIwRTNQbG5LL2EzM1Bzb2pGcUU2NkpFZFo0cTBlWjRUMmY2eXRkUnRKa1IyOVp0V3NKUnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in a kvstore, etcd or consul, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "true"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: medea
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "1"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: disabled
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  # wait-bpf-mount makes init container wait until bpf filesystem is mounted
  wait-bpf-mount: "false"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-bandwidth-manager: "true"
  enable-local-redirect-policy: "true"
  native-routing-cidr: 10.240.0.0/15
  kube-proxy-replacement:  "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  enable-host-reachable-services: "true"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  node-port-mode: "dsr"
  enable-session-affinity: "true"
  enable-endpoint-routes: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.241.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  cluster-pool-ipv6-cidr: "fd00::/104"
  cluster-pool-ipv6-mask-size: "120"
  disable-cnp-status-updates: "true"
---
# Source: cilium/templates/hubble-ca-configmap.yaml
# NOTE: the hubble-ca-cert ConfigMap is deprecated and will be removed in v1.11
# The Hubble CA certificate can be found in both the hubble-server-certs and
# hubble-relay-client-certs Secrets under the ca.crt key.
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ca-cert
  namespace: kube-system
data:
  ca.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIDKDCCAhCgAwIBAgIRAI85IcoAqzKJUTc7Xd1a1ZowDQYJKoZIhvcNAQELBQAw
    HjEcMBoGA1UEAxMTaHViYmxlLWNhLmNpbGl1bS5pbzAeFw0yMTA1MDMyMDE4MDda
    Fw0yNDA1MDIyMDE4MDdaMB4xHDAaBgNVBAMTE2h1YmJsZS1jYS5jaWxpdW0uaW8w
    ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDEQukuEXADlqInQxJxlowp
    +kKDLL3Blfq2Nps8S2E71mV1X6vaWg9NB/W2Ydg4EqvU5TnTd6u24YA9caOiiGD4
    FaMkH5qs6d1xhbge9RyfPBqviuIFELMQXb1JqC25c/IS2Wad2CCFySPbv2OaWghi
    m/1w+MQH/YHFGLSIDt+5ecgfZkWjpABg60J1Ib0umKAwFTARUNQfceFFbwJ12Du0
    QQ7EH5DkJlrzJ5ISuto7mF8w73qJ712Do/nYkoP8t5Db2+NUg0QMZdRohpnq5kyX
    b8QdKl9NAtg8xhOT34KRqarqCqmRyfnFueGESsjny13ZYUGIobVb58yr6Z0GLGLx
    AgMBAAGjYTBfMA4GA1UdDwEB/wQEAwICpDAdBgNVHSUEFjAUBggrBgEFBQcDAQYI
    KwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUr94FOV2nU7HQ35c5
    69MgAFTKLMAwDQYJKoZIhvcNAQELBQADggEBAC21lZEnrJBzezroqHVXOtqsd9rQ
    GExh89KajHZGwyEfMU2Z6nGdamlBaieoWMMn/Lf7n6Wh4z1sJhCZurgAQN9YMFM2
    HjXKMZtATWAULxLd/1/2JIwrq/12kaZIjLd8x8tm/oEqcA0kgbNQm4WQQ/79W/jv
    xoXqE5hUhcaK8ky9fHm6o2PTXk+hLUW/zVjQsqTL3vhhrK5zCj0XA6o42aOIPJ+g
    SzlBaMJ9aPj+xbu5S2e6VpJ2IKnmAFOz9lKcIgvaSbS3Qq99CjDF5iWgZp2GiV1y
    hNzeYxa3fZynINlDXatdDwlkMHdEpz9D3tjB4QncrRszz8RtXsR1bvgGY0k=
    -----END CERTIFICATE-----
---
# Source: cilium/templates/hubble-relay-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-relay-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-relay
rules:
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/hubble-ui-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-relay
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-relay
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: "hubble-relay"
---
# Source: cilium/templates/hubble-ui-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: "hubble-ui"
---
# Source: cilium/templates/hubble-relay-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  labels:
    k8s-app: hubble-ui
  namespace: kube-system
spec:
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
  type: ClusterIP
---
# Source: cilium/templates/cilium-agent-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        startupProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 24
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "65.21.73.144"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: "quay.io/cilium/cilium:v1.10.0-rc1@sha256:bdec5db5b9651c208a326f8d3b1d6a1caf5d943989ea2fdb68b24802dd17b134"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        name: cilium-agent
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
          # Needed to be able to load kernel modules
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: CILIUM_WAIT_BPF_MOUNT
          valueFrom:
            configMapKeyRef:
              key: wait-bpf-mount
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "65.21.73.144"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: "quay.io/cilium/cilium:v1.10.0-rc1@sha256:bdec5db5b9651c208a326f8d3b1d6a1caf5d943989ea2fdb68b24802dd17b134"
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
          mountPropagation: HostToContainer
        - mountPath: /var/run/cilium
          name: cilium-run
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
        # To keep state between restarts / upgrades for bpf maps
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      # To install cilium cni plugin in the host
      - hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
        # To install cilium cni configuration in the host
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
        # To be able to load kernel modules
      - hostPath:
          path: /lib/modules
        name: lib-modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          defaultMode: 420
          optional: true
          secretName: cilium-clustermesh
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          sources:
          - secret:
              name: hubble-server-certs
              items:
                - key: ca.crt
                  path: client-ca.crt
                - key: tls.crt
                  path: server.crt
                - key: tls.key
                  path: server.key
              optional: true
---
# Source: cilium/templates/cilium-operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "65.21.73.144"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: "quay.io/cilium/operator-generic:v1.10.0-rc1@sha256:3b46c6fc9dc085d395136ca9cf8af1d0f653184c797e0ad7038e103abfbffacd"
        imagePullPolicy: IfNotPresent
        name: cilium-operator
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
      - operator: Exists
      volumes:
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
# Source: cilium/templates/hubble-relay-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  labels:
    k8s-app: hubble-relay
  namespace: kube-system
spec:

  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.10.0-rc1@sha256:9e1120dd272bf5ebce5f7b2002ac7ae9a2854d9b7a799e0548312432c9c28b8d"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - mountPath: /var/run/cilium
            name: hubble-sock-dir
            readOnly: true
          - mountPath: /etc/hubble-relay
            name: config
            readOnly: true
          - mountPath: /var/lib/hubble-relay/tls
            name: tls
            readOnly: true
      restartPolicy: Always
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      terminationGracePeriodSeconds: 0
      volumes:
      - configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
        name: config
      - hostPath:
          path: /var/run/cilium
          type: Directory
        name: hubble-sock-dir
      - projected:
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
        name: tls
---
# Source: cilium/templates/hubble-ui-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
        - name: frontend
          image: "quay.io/cilium/hubble-ui:v0.7.7@sha256:f20b6b3074a431ecd2730cf19afad2562664cf98baecf32b4cbe2a09f04ad8fa"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          resources:
            {}
        - name: backend
          image: "quay.io/cilium/hubble-ui-backend:v0.7.7@sha256:11d06121c86549c0c8684571ffed4ff3d4c4417f551728f4fad6d05525c47e9d"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
          ports:
            - containerPort: 8090
              name: grpc
          resources:
            {}
        - name: proxy
          image: "docker.io/envoyproxy/envoy:v1.18.2@sha256:e8b37c1d75787dd1e712ff389b0d37337dc8a174a63bed9c34ba73359dc67da7"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: http
          resources:
            {}
          command: ["envoy"]
          args:
            [
              "-c",
              "/etc/envoy.yaml",
              "-l",
              "info"
            ]
          volumeMounts:
            - name: hubble-ui-envoy-yaml
              mountPath: /etc/envoy.yaml
              subPath: envoy.yaml
      volumes:
        - name: hubble-ui-envoy-yaml
          configMap:
            name: hubble-ui-envoy
