apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  serviceName: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      name: prometheus
    spec:
      containers:
        - args:
            - --config.file=/etc/prometheus/prometheus.yaml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention.time=15d
            - --storage.tsdb.no-lockfile
          image: prom/prometheus
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /-/healthy
              port: http
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          name: prometheus
          ports:
            - containerPort: 9090
              name: http
          readinessProbe:
            failureThreshold: 120
            httpGet:
              path: /-/ready
              port: http
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          volumeMounts:
            - mountPath: /etc/prometheus
              name: prometheus-config
            - mountPath: /prometheus
              name: prometheus-storage
      securityContext:
        fsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      serviceAccountName: prometheus
      volumes:
        - name: prometheus-config
          secret:
            secretName: prometheus-config
  volumeClaimTemplates:
    - metadata:
        name: prometheus-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
