apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: cockroachdb
  name: cockroachdb
spec:
  replicas: 1
  serviceName: cockroachdb-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: cockroachdb
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "_status/vars"
        prometheus.io/port: "8080"
      labels:
        app.kubernetes.io/name: cockroachdb
    spec:
      serviceAccountName: cockroachdb
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 65534
      initContainers:
        - name: cert-perms
          image: busybox:latest
          command:
            - /bin/sh
            - -c
            - >
              cp /certs/ca.crt /fixed-certs/ca.crt &&
              cp /certs/tls.crt /fixed-certs/node.crt &&
              cp /certs/tls.key /fixed-certs/node.key &&
              chown 65534:65534 /fixed-certs/* &&
              chmod 0400 /fixed-certs/*
          volumeMounts:
            - name: certs
              mountPath: /certs
            - name: fixed-certs
              mountPath: /fixed-certs
      containers:
        - name: cockroachdb
          image: cockroachdb/cockroach:latest
          # command:
          #   - bash
          #   - -c
          #   - sleep 100000
          command:
            - /bin/bash
            - -ecx
            - /cockroach/cockroach
              start-single-node
              --logtostderr
              --certs-dir=/cockroach/cockroach-certs
              --advertise-host $(hostname -f)
          ports:
            - name: grpc
              containerPort: 26257
            - name: http
              containerPort: 8080
          env:
            - name: COCKROACH_CHANNEL
              value: kubernetes-secure
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
                  divisor: "1"
            - name: MEMORY_LIMIT_MIB
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
                  divisor: "1Mi"
          resources:
            requests:
              cpu: 150m
              memory: 150Mi
            limits:
              cpu: 400m
              memory: 400Mi
          livenessProbe:
            httpGet:
              path: "/health"
              port: http
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: "/health?ready=1"
              port: http
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 2
          securityContext:
            runAsNonRoot: true
            runAsGroup: 65534
            runAsUser: 65534
          volumeMounts:
            - name: cockroachdb-data
              mountPath: /cockroach/cockroach-data
            - name: fixed-certs
              mountPath: /cockroach/cockroach-certs
      volumes:
        - name: certs
          secret:
            secretName: cockroachdb-certs
            defaultMode: 256
        - name: fixed-certs
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: cockroachdb-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
