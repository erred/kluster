receivers:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/filelogreceiver
  filelog:
    include:
      - /var/log/pods/*/*/*.log
    # Exclude collector container's logs. The file format is /var/log/pods/<namespace_name>_<pod_name>_<pod_uid>/<container_name>/<run_id>.log
    exclude:
      - /var/log/pods/otelcol_otelcol*_*/otelcol/*.log
    start_at: beginning
    include_file_path: true
    include_file_name: false
    operators:
      # Find out which format is used by kubernetes
      - type: router
        id: get-format
        routes:
          - output: parser-docker
            expr: '$$body matches "^\\{"'
          - output: parser-crio
            expr: '$$body matches "^[^ Z]+ "'
          - output: parser-containerd
            expr: '$$body matches "^[^ Z]+Z"'
      # Parse CRI-O format
      - type: regex_parser
        id: parser-crio
        regex: '^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) (?P<log>.*)$'
        # output: extract_metadata_from_filepath
        timestamp:
          parse_from: time
          layout_type: gotime
          layout: '2006-01-02T15:04:05.000000000-07:00'
      # Parse CRI-Containerd format
      - type: regex_parser
        id: parser-containerd
        regex: '^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) (?P<log>.*)$'
        # output: extract_metadata_from_filepath
        timestamp:
          parse_from: time
          layout: '%Y-%m-%dT%H:%M:%S.%LZ'
      # Parse Docker format
      - type: json_parser
        id: parser-docker
        # output: extract_metadata_from_filepath
        timestamp:
          parse_from: time
          layout: '%Y-%m-%dT%H:%M:%S.%LZ'
      # 2021-06-27T22:11:44.497Z	error	Failed to process entry	{"kind": "receiver", "name": "filelog", "operator_id": "$.extract_metadata_from_filepath", "operator_type": "regex_parser", "error": "regex pattern does not match", "action": "send", "entry": {"timestamp":"2021-06-27T22:11:44.374778482Z","body":{"log":"2021-06-27 22:11:44.374715 I | mvcc: finished scheduled compaction at 193953 (took 41.961352ms)","logtag":"F","stream":"stderr"},"attributes":{"file_path":"/var/log/pods/kube-system_etcd-cluster30-control-plane_22369ba3a4740516aace7ec9dfeb44f7/etcd/0.log"},"severity":0}}
      # # Extract metadata from file path
      # - type: regex_parser
      #   id: extract_metadata_from_filepath
      #   regex: '^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]{36})\/(?P<container_name>[^\._]+)\/(?P<run_id>\d+)\.log$'
      #   parse_from: $$attributes.file_path
      # # Move out attributes to Attributes
      # - type: metadata
      #   labels:
      #     stream: 'EXPR($.stream)'
      #     k8s.container.name: 'EXPR($.container_name)'
      #     k8s.namespace.name: 'EXPR($.namespace)'
      #     k8s.pod.name: 'EXPR($.pod_name)'
      #     run_id: 'EXPR($.run_id)'
      #     k8s.pod.uid: 'EXPR($.uid)'
      # # Clean up log body
      # - type: restructure
      #   id: clean-up-log-body
      #   ops:
      #     - move:
      #         from: log
      #         to: $
  # https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver/hostmetricsreceiver
  hostmetrics:
    collection_interval: 15s
    scrapers:
      cpu: {}
      disk: {}
      load: {}
      # filesystem: {}
      memory: {}
      network: {}
      paging: {}
      processes: {}
      # 2021-06-27T20:46:24.704Z	error	scraperhelper/scrapercontroller.go:205	Error scraping metrics	{"kind": "receiver", "name": "hostmetrics", "error": "error reading username for process \"otelcontribcol\" (pid 1): open /etc/passwd: no such file or directory"}
      # process: {}
  jaeger:
    protocols:
      thrift_compact: # 6831
      grpc: # 14250
      thrift_http: # 14268
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/k8sclusterreceiver
  k8s_cluster:
    auth_type: serviceAccount
    collection_interval: 15s
    node_conditions_to_report:
      - Ready
      - DiskPressure
      - MemoryPressure
      - PIDPressure
      - NetworkUnavailable

  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/kubeletstatsreceiver
  kubeletstats:
    auth_type: serviceAccount
    endpoint: ${K8S_NODE_NAME}:10250
    collection_interval: 15s
    insecure_skip_verify: true
    extra_metadata_labels:
      - container.id
      - k8s.volume.type
    k8s_api_config:
      auth_type: serviceAccount
    metric_groups:
      - container
      - node
      - pod
      - volume

  otlp:
    protocols:
      grpc:

  prometheus:
    config:
      scrape_configs:
        - job_name: endpoints
          scrape_interval: 15s
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels:
                - __meta_kubernetes_service_annotation_prometheus_io_scrape
              action: keep
              regex: "true"
            - source_labels:
                - __meta_kubernetes_service_annotation_prometheus_io_scheme
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels:
                - __meta_kubernetes_service_annotation_prometheus_io_path
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels:
                - __address__
                - __meta_kubernetes_service_annotation_prometheus_io_port
              action: replace
              target_label: __address__
              regex: ([^:]+)(?::\d+)?;(\d+)
              # escape env subst in otelcol config
              replacement: $$1:$$2
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels:
                - __meta_kubernetes_namespace
              action: replace
              target_label: kubernetes_namespace
            - source_labels:
                - __meta_kubernetes_service_name
              action: replace
              target_label: kubernetes_name
            - source_labels:
                - __meta_kubernetes_pod_node_name
              action: replace
              target_label: kubernetes_node


processors:
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    ballast_size_mib: 512
  batch: {}

exporters:
  jaeger:
    endpoint: jaeger.jaeger.svc.cluster.local:14250
    insecure: true

  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/lokiexporter
  loki:
    endpoint: http://loki.loki.svc.cluster.local/loki/api/v1/push
    # required? copied from example
    labels:
      resource:
        container.name: "container_name"
        k8s.cluster.name: "k8s_cluster_name"
      attributes:
        severity: ""
        http.status_code: "http_status_code"

  prometheusremotewrite:
    endpoint: http://prometheus.prometheus.svc.cluster.local/api/v1/write
    insecure: true
    resource_to_telemetry_conversion:
      enabled: true

  prometheus:
    endpoint: :8080
    resource_to_telemetry_conversion:
      enabled: true

extensions:
  health_check: {}
  pprof: {}
  zpages: {}

service:
  extensions:
    - health_check
    - pprof
    - zpages
  pipelines:
    # logs/agent:
    #   receivers:
    #     - filelog
    #   processors:
    #     - memory_limiter
    #     - batch
    #   exporters:
    #     - loki
    # logs/gateway:
    #   receivers:
    #     - otlp
    #   processors:
    #     - memory_limiter
    #     - batch
    #   exporters:
    #     - loki
    metrics/agent:
      receivers:
        - hostmetrics
        - kubeletstats
      processors:
        - memory_limiter
        - batch
      exporters:
        - prometheusremotewrite
        - prometheus
    metrics/gateway:
      receivers:
        - k8s_cluster
        - otlp
        - prometheus
      processors:
        - memory_limiter
        - batch
      exporters:
        - prometheusremotewrite
        # - prometheus
    traces/gateway:
      receivers:
        - otlp
        - jaeger
      processors:
        - memory_limiter
        - batch
      exporters:
        - jaeger
