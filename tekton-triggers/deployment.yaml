apiVersion: apps/v1
kind: Deployment
metadata:
  name: tekton-triggers-controller
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: tekton-triggers
    app.kubernetes.io/component: controller
    # tekton.dev/release value replaced with inputs.params.versionTag in triggers/tekton/publish.yaml
    triggers.tekton.dev/release: "v0.4.0-rc1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tekton-triggers-controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: tekton-triggers-controller
        triggers.tekton.dev/release: "v0.4.0-rc1"
        # version value replaced with inputs.params.versionTag in triggers/tekton/publish.yaml
        version: "v0.4.0-rc1"
    spec:
      serviceAccountName: tekton-triggers-controller
      containers:
        - name: tekton-triggers-controller
          image: gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/controller@sha256:14b58060ad0ea0387f225e3b5fc334a008bb3a82048532f9ac49bf3389cea482
          args:
            [
              "-logtostderr",
              "-stderrthreshold",
              "INFO",
              "-el-image",
              "gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/eventlistenersink@sha256:3d3bb4007b6dc054d689812af375d4b708a220b8d1da2f164de7ce8d9cc70026",
              "-el-port",
              "8080",
              "-period-seconds",
              "10",
              "-failure-threshold",
              "1",
            ]
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging-triggers
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability-triggers
            - name: METRICS_DOMAIN
              value: tekton.dev/triggers
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tekton-triggers-webhook
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: tekton-triggers
    app.kubernetes.io/component: webhook-controller
    # tekton.dev/release value replaced with inputs.params.versionTag in triggers/tekton/publish.yaml
    triggers.tekton.dev/release: "v0.4.0-rc1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tekton-triggers-webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: tekton-triggers-webhook
        triggers.tekton.dev/release: "v0.4.0-rc1"
        # version value replaced with inputs.params.versionTag in triggers/tekton/publish.yaml
        version: "v0.4.0-rc1"
        role: webhook
        app.kubernetes.io/name: tekton-triggers
        app.kubernetes.io/component: webhook-controller
    spec:
      serviceAccountName: tekton-triggers-controller
      containers:
        - name: webhook
          # This is the Go import path for the binary that is containerized
          # and substituted here.
          image: gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/webhook@sha256:d62cbf0a015bd2a90a89a84d5796aacb564f162e746c29fba083bd376a0892f6
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging-triggers
            - name: WEBHOOK_SERVICE_NAME
              value: tekton-triggers-webhook
            - name: METRICS_DOMAIN
              value: tekton.dev/triggers
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: https-webhook
              containerPort: 8443
