apiVersion: v1
kind: Service
metadata:
  name: traefik
  labels:
    app: traefik
spec:
  type: ClusterIP
  selector:
    app: traefik
  ports:
    - name: web
      port: 80
      targetPort: 8080
    - name: websecure
      port: 443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:latest
          args:
            - "--accesslog"
            - "--global.checknewversion=false"
            - "--global.sendanonymoususage=false"
            - "--entryPoints.traefik.address=:9000"
            - "--entryPoints.web.address=:8080"
            - "--entryPoints.websecure.address=:8443"
            - "--api.dashboard=false"
            - "--ping=true"
            - "--metrics.prometheus"
            - "--providers.kubernetescrd"
            - "--providers.kubernetesingress"
            - "--certificatesresolvers.le"
            - "--certificatesresolvers.le.acme.dnschallenge.provider=cloudflare"
            - "--certificatesresolvers.le.acme.email=cluster18-le@seankhliao.com"
          env:
            - name: CF_API_EMAIL
              valueFrom:
                secretKeyRef:
                  name: cloudflare-token
                  key: api-email
            - name: CF_API_KEY
              valueFrom:
                secretKeyRef:
                  name: cloudflare-token
                  key: api-token
          ports:
            - name: traefik
              containerPort: 9000
              protocol: TCP
            - name: web
              containerPort: 8080
              hostPort: 80
              protocol: TCP
            - name: websecure
              containerPort: 8443
              hostPort: 443
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ping
              port: 9000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /ping
              port: 9000
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
